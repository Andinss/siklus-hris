// -----------------------------------------------------------------------------
// This file contains typography rules
// -----------------------------------------------------------------------------

@use '../abstracts/functions' as functions;
@use '../abstracts/mixins' as mixins;
@use './fonts' as fonts;

body {
	@include fonts.use_font(body_regular_md);
}

a {
	text-decoration: none;
	&:hover {
		text-decoration: none;
	}
}

.text-strike {
	text-decoration: line-through;
}

p {
	@include fonts.use_font(body_regular_md);
	margin-bottom: 0;
	@include mixins.breakpoint_max(md) {
		@include fonts.use_font(body_regular_sm);
	}
	> sup {
		top: 5px;
	}
}

.card a,
p > a,
.direct-link {
	color: functions.std_val(std_color, primary_dark);
	&:hover {
		color: functions.std_val(std_color, primary_main);
		opacity: 0.8;
	}
}

.txt-highlight {
	color: functions.std_val(std_color, primary_main);
}

/* To analyze */

blockquote {
	padding: 10px 20px;
	margin: 0 0 20px;
	font-size: 17.5px;
}

.page-title {
	margin-bottom: 0 !important;
}

$textColorMapping:
	('primary', functions.std_val(std_color, primary_dark)), ('secondary', functions.std_val(std_color, secondary_dark)),
	('dark', functions.std_val(std_color, dark_75)), ('light', functions.std_val(std_color, light_25)), ('danger', functions.std_val(material_color, red_700)),
	('info', functions.std_val(material_color, light_blue_700)), ('warning', functions.std_val(material_color, orange_500)),
	('success', functions.std_val(material_color, teal_700)), ('gray', functions.std_val(material_color, grey_700)),
	('blue-gray', functions.std_val(material_color, blue_grey_700)), ('disabled', functions.std_val(material_color, grey_300));

@each $variant, $textColor in $textColorMapping {
	.text-#{$variant} {
		color: #{$textColor} !important;
	}
}
