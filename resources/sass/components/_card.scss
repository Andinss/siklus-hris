// -----------------------------------------------------------------------------
// This file contains card ui component rules
// -----------------------------------------------------------------------------

@use '../abstracts/mixins' as mixins;
@use '../abstracts/functions' as functions;
@use '../base/fonts' as fonts;

.card-primary {
	background-color: #ab8ce4;
	border-color: #ab8ce4;
}
.card-success {
	background-color: #00c292;
	border-color: #00c292;
}
.card-info {
	background-color: #03a9f3;
	border-color: #03a9f3;
}
.card-warning {
	background-color: #fec107;
	border-color: #fec107;
}
.card-danger {
	background-color: #fb9678;
	border-color: #fb9678;
}
.card-secondary {
	background-color: #4c5667;
	border-color: #4c5667;
}
.card-red {
	background-color: #fb3a3a;
	border-color: #fb3a3a;
}
.card-blue {
	background-color: #02bec9;
	border-color: #02bec9;
}
.card-purple {
	background-color: #9675ce;
	border-color: #9675ce;
}
.card-megna {
	background-color: #01c0c8;
	border-color: #01c0c8;
}
.card-outline-primary {
	border-color: #ab8ce4;
}
.card-outline-success {
	border-color: #00c292;
}
.card-outline-info {
	border-color: #03a9f3;
}
.card-outline-warning {
	border-color: #fec107;
}
.card-outline-danger {
	border-color: #fb9678;
}
.card-outline-secondary {
	border-color: #4c5667;
}
.card-outline-red {
	border-color: #fb3a3a;
}
.card-outline-blue {
	border-color: #02bec9;
}
.card-outline-purple {
	border-color: #9675ce;
}
.card-outline-megna {
	border-color: #01c0c8;
}

/* ---------------------- */

.card {
	position: relative;
	border-radius: 12px;
	border-color: functions.std_val(std_color, divider);
	background: functions.std_val(std_color, light_25);
	.card-subheader {
		@include fonts.use_font(body_bold_md);
		margin-top: 0;
		margin-bottom: 12px;
	}
	.card-note {
		display: flex;
		align-items: center;
		gap: 8px;
		@include fonts.use_font(body_medium_sm);
		background: functions.std_val(std_color, light_100);
		color: functions.std_val(std_color, neutral_lighter);
		border-radius: 4px;
		padding: 8px 8px;
	}
	.card-header,
	.card-body,
	.card-footer {
		width: 100%;
		padding: 24px 24px;
		border-radius: 12px;
		@include fonts.use_font(body_regular_md);
		background: functions.std_val(std_color, light_25);
	}
	&.card-login {
		width: 420px;
		box-shadow: functions.std_val(elevation, card);
		display: flex;
		align-items: center;
		justify-content: center;
		@include mixins.breakpoint_max(sm) {
			width: 92%;
		}
		> .card-body {
			padding: 32px 32px;
			.brand {
				display: flex;
				width: 100%;
				height: 48px;
				margin-top: 8px;
				margin-bottom: 24px;
				> img {
					height: 100%;
					object-fit: contain;
					margin: 0 auto;
				}
			}
			.login-title {
				@include fonts.use_font(title_medium_md);
				margin-bottom: 24px;
				text-align: center;
				color: functions.std_val(std_color, dark_25);
			}
			.button-forgot {
				display: flex;
				position: relative;
				height: 100%;
				padding: 0 auto;
				width: 100%;
				align-items: center;
				justify-content: end;
				gap: 8px;
			}
		}
	}
	&.card-summary {
		.summary {
			&-title {
				@include fonts.use_font(headline_medium_md);
				color: functions.std_val(std_color, primary_dark);
			}
			&-caption {
				> p {
					@include fonts.use_font(body_regular_md);
					color: functions.std_val(std_color, dark_25);
				}
			}
		}
	}
	&.card-user-presence {
		.presence-container {
			max-height: 316px;
			overflow-y: auto;
		}
	}
}

/*
* variant
* background color
* border color
* title text color
* body text color
* icon color
*/
$cardColorMapping:
	(
		'primary',
		functions.std_val(std_color, primary_lighter),
		functions.std_val(std_color, primary_light),
		functions.std_val(std_color, dark_75),
		functions.std_val(std_color, primary_dark),
		functions.std_val(std_color, primary_dark)
	),
	(
		'secondary',
		functions.std_val(std_color, secondary_lighter),
		functions.std_val(std_color, secondary_light),
		functions.std_val(std_color, dark_75),
		functions.std_val(std_color, secondary_dark),
		functions.std_val(std_color, secondary_dark)
	),
	(
		'danger',
		functions.std_val(material_color, red_100),
		functions.std_val(material_color, red_300),
		functions.std_val(std_color, dark_75),
		functions.std_val(material_color, red_700),
		functions.std_val(material_color, red_700)
	),
	(
		'success',
		functions.std_val(material_color, teal_100),
		functions.std_val(material_color, teal_300),
		functions.std_val(std_color, dark_75),
		functions.std_val(material_color, teal_700),
		functions.std_val(material_color, teal_700)
	),
	(
		'info',
		functions.std_val(material_color, light_blue_100),
		functions.std_val(material_color, light_blue_300),
		functions.std_val(std_color, dark_75),
		functions.std_val(material_color, light_blue_700),
		functions.std_val(material_color, light_blue_700)
	),
	(
		'warning',
		functions.std_val(material_color, deep_orange_100),
		functions.std_val(material_color, deep_orange_300),
		functions.std_val(std_color, dark_75),
		functions.std_val(material_color, deep_orange_700),
		functions.std_val(material_color, deep_orange_700)
	),
	(
		'gray',
		functions.std_val(material_color, grey_100),
		functions.std_val(material_color, grey_300),
		functions.std_val(std_color, dark_75),
		functions.std_val(material_color, grey_700),
		functions.std_val(material_color, grey_700)
	),
	(
		'blue-gray',
		functions.std_val(material_color, blue_grey_100),
		functions.std_val(material_color, blue_grey_300),
		functions.std_val(std_color, dark_75),
		functions.std_val(material_color, blue_grey_700),
		functions.std_val(material_color, blue_grey_700)
	);

@each $variant, $bgColor, $borderColor, $titleColor, $bodyColor, $iconColor in $cardColorMapping {
	.card {
		&.card-#{$variant} {
			background-color: unset;
			border-color: $borderColor;
			.card-header,
			.card-body,
			.card-footer {
				background: $bgColor;
				h1,
				h2,
				h3,
				h4,
				h5 {
					color: #{$titleColor} !important;
				}
				p {
					color: #{$bodyColor} !important;
				}
				.iconify {
					color: #{$iconColor} !important;
				}
			}
		}
	}
}
